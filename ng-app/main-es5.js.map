{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/header/header.component.ts","webpack:///src/app/components/header/header.component.html","webpack:///src/app/components/image-viewer/image-viewer.component.ts","webpack:///src/app/components/image-viewer/image-viewer.component.html","webpack:///src/app/services/apod/apod.service.ts","webpack:///src/app/services/default.service.ts","webpack:///src/app/views/apod/apod.component.ts","webpack:///src/app/views/apod/apod.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","HeaderComponent","close","ImageViewerComponent","ApodService","url","apod","api_key","params","providedIn","DefaultService","URLSearchParams","fetch","method","headers","ApodComponent","apodService","datePipe","sanitizer","viewer","date","transform","Date","maxDate","hd","getApod","get","response","status","json","result","media_type","bypassSecurityTrustResourceUrl","console","log","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ApodComponent } from './views/apod/apod.component';\n\n\nconst routes: Routes = [\n  { path: 'apod', component: ApodComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'ng-app';\n}\n","<div>\n  <app-header></app-header>\n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ApodComponent } from './views/apod/apod.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { ImageViewerComponent } from './components/image-viewer/image-viewer.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ApodComponent,\n    HeaderComponent,\n    ImageViewerComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<header id=\"header\">\n  <span>angularApp</span>\n</header>","import { Component, Input, OnInit, Output } from '@angular/core';\nimport { EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-image-viewer',\n  templateUrl: './image-viewer.component.html',\n  styleUrls: ['./image-viewer.component.scss']\n})\nexport class ImageViewerComponent implements OnInit {\n\n  @Input() open: boolean;\n  @Input() url: string;\n\n  @Output() close = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div *ngIf=\"open\" class=\"viewer-container\">\n  <div class=\"viewer-content\">\n    <a class=\"close-button\" (click)=\"close.emit()\">\n      Close\n    </a>\n    <img [src]=\"url\" class=\"main-img\">\n  </div>\n</div>","import { Injectable } from '@angular/core';\nimport { environment } from \"../../../environments/environment\";\nimport { DefaultService } from '../default.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApodService extends DefaultService {\n\n  url: string;\n  api_key: string;\n\n  constructor() {\n    super();\n    this.url = environment.apod.url;\n    this.api_key = environment.apod.api_key;\n  }\n\n  get(path, params): Promise<any> {\n    params.api_key = this.api_key\n    return super.get(path, params);\n  }\n  \n}\n","export abstract class DefaultService {\n\n  url: string;\n  api_key: string;\n\n  /**\n   * GET\n   * @param path \n   * @param params \n   */\n  get(path, params = null): Promise<any> {\n    let url;\n\n    if(params) {\n      url = this.url + path + '?' + new URLSearchParams(params);\n    } else {\n      url = this.url + path;\n    }\n\n    return fetch(url, {\n      method: \"GET\",\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n\n  post() { }\n\n  delete() { }\n\n}\n","import { DatePipe } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Apod } from 'src/app/models/apod';\nimport { ApodService } from 'src/app/services/apod/apod.service';\n\n@Component({\n  selector: 'app-apod',\n  templateUrl: './apod.component.html',\n  styleUrls: ['./apod.component.scss'],\n  providers: [DatePipe]\n})\nexport class ApodComponent implements OnInit {\n\n  apod: Apod;\n  date: string;\n  maxDate: string;\n  viewer: boolean = false;\n  params: any;\n\n  constructor(\n    private apodService: ApodService,\n    private datePipe: DatePipe,\n    private sanitizer: DomSanitizer\n  ) { }\n\n  ngOnInit(): void {\n    this.date = this.datePipe.transform(new Date(), 'yyyy-MM-dd');\n    this.maxDate = this.date;\n    this.params = {\n      date: this.date,\n      hd: false\n    }\n\n    this.getApod(this.params);\n  }\n\n  getApod(params) {\n    this.apodService.get('', params)\n      .then(response => {\n        if(response.status === 200) {\n          response.json()\n            .then(result => {\n              this.apod = result;\n              if(this.apod.media_type == \"video\") {\n                this.apod.url = this.sanitizer.bypassSecurityTrustResourceUrl(this.apod.url);\n              }\n            })\n        } else {\n          console.log('response status', response.status);\n        }\n      });\n  }\n\n  changeDate(date) {\n    this.date = date;\n    this.params.date = this.date;\n    this.getApod(this.params);\n  }\n\n}\n","<div id=\"apod\" class=\"container\">\n  <div *ngIf=\"apod\" class=\"row\">\n    <div class=\"col-11-11 sub-title\">\n      <span>Choose a date: </span>\n    </div>\n    <div class=\"col-11-11 sub-title\">\n      <input type=\"date\" name=\"date\" [max]=\"maxDate\" [(ngModel)]=\"date\" (ngModelChange)=\"changeDate($event)\">\n    </div>\n    <div class=\"col-11-11 title\">\n      <span>{{apod.title}}</span>\n    </div>\n    <div class=\"col-11-11 sub-title\">\n      <span>{{apod.copyright}}</span>\n    </div>\n    <div class=\"col-11-11 explanation\">\n      <p>\n        {{apod.explanation}}\n      </p>\n    </div>\n    <div *ngIf=\"apod.media_type == 'image'\" class=\"col-11-11 img-container\">\n      <img [src]=\"apod.hdurl\" [alt]=\"apod.title\" (click)=\"viewer = true\">\n    </div>\n    <div *ngIf=\"apod.media_type == 'video'\" class=\"col-11-11 media-container\">\n      <iframe width=\"560\" height=\"315\" [src]=\"apod.url\" frameborder=\"0\" gesture=\"media\" allow=\"encrypted-media\" allowfullscreen></iframe>\n    </div>\n    <app-image-viewer [url]=\"apod.url\" [open]=\"viewer\" (close)=\"viewer = false\"></app-image-viewer>\n  </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apod: {\n    url: \"https://api.nasa.gov/planetary/apod\",\n    api_key: \"Kn3hZ1hApfaD8BoYyeZMY5DPVgbsuJPFJAbNdHrr\"\n  }\n};\n\n/*\n * ng build --configuration=staging\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}